# Tag a new release version, tag it on github, then create a release
name: Tag and Release

on:
  push:
    branches:
      carl/BCDA-8634-add-tag-and-release-workflows
  workflow_dispatch:
    inputs:
      release_version:
        description: 'Release version (or branch name)'
        required: true
        type: string
      ops_release_version:
        description: 'Release version for bcda-ops (or branch name)'
        required: true
        type: string
      previous_release_version:
        description: 'Previous version (tag or branch name)'
        required: true
        type: string

permissions:
  id-token: write
  contents: write

env:
  GPG_KEY_FILE_NAME: "bcda_ci_github_gpg.key"
  RELEASE_VERSION: ${{ inputs.release_version || 'main' }}
  OPS_RELEASE_VERSION: ${{ inputs.ops_release_version || 'main' }}
  PREVIOUS_RELEASE_VERSION: ${{ inputs.previous_release_version || 'main' }}
  RELEASE_GITHUB_USER: carlpartridge
  RELEASE_GITHUB_EMAIL: "carlpartridge@navapbc.com"

jobs:
  tag_and_release:
    name: Tag and Release
    runs-on: self-hosted
    steps:
      - name: Checkout SSAS
        uses: actions/checkout@v4
        with:
          repository: CMSgov/bcda-ssas-app 
        #   ref: ${{ env.RELEASE_VERSION }}
          ref: carl/BCDA-8634-add-tag-and-release-workflows
      - name: Set tags env var
        if: ${{ env.RELEASE_VERSION != '' && env.PREVIOUS_RELEASE_VERSION != '' }}
        run: |
          export TAG_ARGS_APP="-t ${{ env.PREVIOUS_RELEASE_VERSION }} ${{ env.RELEASE_VERSION }}"
          echo "TAG_ARGS_APP=$TAG_ARGS_APP" >> $GITHUB_ENV
      - name: Catch incorrect inputs
        if: ${{ env.RELEASE_VERSION == '' || env.PREVIOUS_RELEASE_VERSION == '' }}
        run: |
          echo 'FAILURE: To initiate manual tagging, both release_version and previous_release_version must be specified.'
          exit 1
      - name: Get AWS params
        uses: cmsgov/ab2d-bcda-dpc-platform/actions/aws-params-env-action@main
        env:
          AWS_REGION: ${{ vars.AWS_REGION }}
        with:
          params: |
            BCDA_GPG_PUB_KEY=/bcda/gpg/pub-key
            OPS_GITHUB_TOKEN=/ci/github/token
      - name: Run release script
        run: |
          echo "${{ env.BCDA_GPG_PUB_KEY }}" > ./${{ env.GPG_KEY_FILE_NAME }}
          GITHUB_REPO_PATH='/CMSgov/bcda-ssas-app' GITHUB_ACCESS_TOKEN=${{ secrets.GITHUB_TOKEN }} GITHUB_USER='${{ env.RELEASE_GITHUB_USER }}' GITHUB_EMAIL='${{ env.RELEASE_GITHUB_EMAIL }}' GITHUB_GPG_KEY_FILE=${{ env.GPG_KEY_FILE_NAME }} bash ops/release.sh ${{ env.TAG_ARGS_APP }}
      - name: Upload release scripts
        uses: actions/upload-artifact@v4
        with:
          name: release-scripts
          path: |
            ./ops/release.sh
            ./ops/github_release.py
      - name: Checkout BCDA-SSAS-OPS
        uses: actions/checkout@v4
        with:
          repository: CMSgov/bcda-ssas-ops
          ref: ${{ env.OPS_RELEASE_VERSION }}
          token: ${{ env.OPS_GITHUB_TOKEN }}
      - name: Download release scripts
        uses: actions/download-artifact@v4
        with:
          name: release-scripts
          path: ops
      - name: Run release for Ops
        run: |
          echo "${{ env.BCDA_GPG_PUB_KEY }}" > ./${{ env.GPG_KEY_FILE_NAME }}
          GITHUB_REPO_PATH='/CMSgov/bcda-ssas-ops' GITHUB_ACCESS_TOKEN=${{ env.OPS_GITHUB_TOKEN }} GITHUB_USER='${{ env.RELEASE_GITHUB_USER }}' GITHUB_EMAIL='${{ env.RELEASE_GITHUB_EMAIL }}' GITHUB_GPG_KEY_FILE=${{ env.GPG_KEY_FILE_NAME }} bash ops/release.sh ${{ env.TAG_ARGS_APP }}
      - name: Success Alert
        if: ${{ success() }}
        uses: slackapi/slack-github-action@v2.0.0
        with:
          method: chat.postMessage
          token: ${{ secrets.SLACK_BOT_TOKEN }}
          # Sends to bcda-deploy
          payload: |
            channel: "C03S23MJFJS"
            attachments:
              - color: good
                text: "SUCCESS: Tag and Release BCDA (${{ env.RELEASE_VERSION }}) and OPS (${{ env.OPS_RELEASE_VERSION }}).  Run: <${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}|${{ github.run_id }}>"
                mrkdown_in:
                  - text
      - name: Failure Alert
        if: ${{ failure() }}
        uses: slackapi/slack-github-action@v2.0.0
        with:
          method: chat.postMessage
          token: ${{ secrets.SLACK_BOT_TOKEN }}
          # Sends to bcda-alerts
          payload: |
            channel: "C034CFU945C"
            attachments:
              - color: danger
                text: "FAILED: Tag and Release BCDA (${{ env.RELEASE_VERSION }}) and OPS (${{ env.OPS_RELEASE_VERSION }}).  Run: <${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}|${{ github.run_id }}>"
                mrkdown_in:
                  - text



name: Package BCDA SSAS

on:
  workflow_call:
    inputs:
      ssas_release_version:
        description: 'Release version (or branch name)'
        required: true
        type: string
  workflow_dispatch:
    inputs:
      ssas_release_version:
        description: 'Release version (or branch name)'
        required: true
        type: string

permissions:
  id-token: write
  contents: read

jobs:
  package_rpm:
    name: Package BCDA SSAS
    runs-on: self-hosted
    steps:
      - uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-region: ${{ vars.AWS_REGION }}
          role-to-assume: arn:aws:iam::${{ secrets.ACCOUNT_ID }}:role/delegatedadmin/developer/bcda-prod-github-actions
      # TODO: TEMP (can remove this step once PLT-905 is implemented)
      - name: Install docker compose manually
        run: |
          sudo mkdir -p /usr/local/lib/docker/cli-plugins
          sudo curl -SL https://github.com/docker/compose/releases/download/v2.32.4/docker-compose-linux-x86_64 -o /usr/local/lib/docker/cli-plugins/docker-compose
          sudo chown root:root /usr/local/lib/docker/cli-plugins/docker-compose
          sudo chmod +x /usr/local/lib/docker/cli-plugins/docker-compose
      - name: Checkout SSAS
        uses: actions/checkout@v4
        with:
          repository: CMSgov/bcda-ssas-app
          ref: ${{ inputs.ssas_release_version }}
      - name: Get AWS params
        uses: cmsgov/ab2d-bcda-dpc-platform/actions/aws-params-env-action@main
        env:
          AWS_REGION: ${{ vars.AWS_REGION }}
        with:
          params: |
            BCDA_GPG_PUB_KEY=/bcda/gpg/pub-key
            BCDA_GPG_SEC_KEY=/bcda/gpg/sec-key
            BCDA_GPG_RPM_PASSPHRASE=/bcda/gpg/passphrase
      - name: Build and package RPMs
        env: 
            GPG_RPM_USER: Beneficiary Claims Data API
            GPG_RPM_EMAIL: "bcapi@cms.hhs.gov"
            GPG_PUB_KEY_FILE: "../ops/RPM-GPG-KEY-bcda"
            GPG_SEC_KEY_FILE: "../ops/RPM-GPG-KEY-SECRET-bcda"
        run: |
          export SLIM_VERSION=`echo ${{ inputs.ssas_release_version }} | sed 's/.*\///'`
          echo "${{ env.BCDA_GPG_PUB_KEY }}" > ops/${{ env.GPG_PUB_KEY_FILE }}
          echo "${{ env.BCDA_GPG_SEC_KEY }}" > ops/${{ env.GPG_SEC_KEY_FILE }}
          # Remove any slashes - we don't want RPM to contain slash
          BCDA_GPG_RPM_PASSPHRASE=${{ env.BCDA_GPG_RPM_PASSPHRASE }} GPG_RPM_USER="${{ env.GPG_RPM_USER }}" GPG_RPM_EMAIL="${{ env.GPG_RPM_EMAIL }}" GPG_PUB_KEY_FILE=${{ env.GPG_PUB_KEY_FILE }} GPG_SEC_KEY_FILE=${{ env.GPG_SEC_KEY_FILE }} make package version=$SLIM_VERSION
      - name: Upload BCDA RPM to s3 releases
        # TODO: should we be checking blank release_version or should we be checking inputs.ssas_release_env == 'dev' ?
        if: ${{ inputs.ssas_release_version != '' }}
        working-directory: ./ssas
        run: |
          export SSAS_RPM=`ls ssas-*.rpm | tr '\n' ' '`
          aws s3 cp --only-show-errors $SSAS_RPM s3://ssas-rpms/ssas-releases/ssas-release-${{ inputs.ssas_release_version }}.rpm
          aws s3 cp --only-show-errors $SSAS_RPM s3://ssas-rpms/ssas-release-latest.rpm
      - name: Upload BCDA RPM to s3 dev
        if: ${{ inputs.ssas_release_version == '' }}
        working-directory: ./ssas
        run: |
          export SSAS_RPM=`ls ssas-*.rpm | tr '\n' ' '`
          export NEW_SSAS_RPM_NAME=`echo $SSAS_RPM | sed -e 's/-1.x86_64.rpm/-'build'${{ github.run_id }}''.rpm/g'`
          aws s3 cp --only-show-errors $SSAS_RPM s3://ssas-rpms/ssas-dev/${NEW_SSAS_RPM_NAME}
          aws s3 cp --only-show-errors $SSAS_RPM s3://ssas-rpms/ssas-dev-latest.rpm

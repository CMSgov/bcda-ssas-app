// Code generated by mockery v2.14.0. DO NOT EDIT.

package public

import (
	jwt "github.com/golang-jwt/jwt/v4"
	mock "github.com/stretchr/testify/mock"

	service "github.com/CMSgov/bcda-ssas-app/ssas/service"
)

// MockTokenCreator is an autogenerated mock type for the TokenCreator type
type MockTokenCreator struct {
	mock.Mock
}

// GenerateToken provides a mock function with given fields: claims
func (_m *MockTokenCreator) GenerateToken(claims service.CommonClaims) (*jwt.Token, string, error) {
	ret := _m.Called(claims)

	var r0 *jwt.Token
	if rf, ok := ret.Get(0).(func(service.CommonClaims) *jwt.Token); ok {
		r0 = rf(claims)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*jwt.Token)
		}
	}

	var r1 string
	if rf, ok := ret.Get(1).(func(service.CommonClaims) string); ok {
		r1 = rf(claims)
	} else {
		r1 = ret.Get(1).(string)
	}

	var r2 error
	if rf, ok := ret.Get(2).(func(service.CommonClaims) error); ok {
		r2 = rf(claims)
	} else {
		r2 = ret.Error(2)
	}

	return r0, r1, r2
}

type mockConstructorTestingTNewMockTokenCreator interface {
	mock.TestingT
	Cleanup(func())
}

// NewMockTokenCreator creates a new instance of MockTokenCreator. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewMockTokenCreator(t mockConstructorTestingTNewMockTokenCreator) *MockTokenCreator {
	mock := &MockTokenCreator{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
